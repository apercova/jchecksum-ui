package com.github.apercova.jchecksumui.ui;

import com.github.apercova.jchecksumui.controller.MainViewController;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileSystemView;

/**
 * Main view class
 *
 * @author
 * <a href="https://twitter.com/apercova" target="_blank">{@literal @}apercova</a>
 * <a href="https://github.com/apercova" target="_blank">https://github.com/apercova</a>
 * @since 1.0.1904
 *
 */
public class MainView extends javax.swing.JFrame {

    private final static String AUTHOR = "@apercova";
    private final static String VERSION = "1.0.1904";
    
    private Image IMAGE_HASHTAG;
    private Image IMAGE_ENCODE;
    private Image IMAGE_DOCUMENT;
    private Image IMAGE_COPY;
    private Image IMAGE_ERASER;
    private MainViewController controller;
    private ResourceBundle messages;

    /**
     * Creates new form MainView
     */
    public MainView() {
        configlanguage();
        loadImages();
        initComponents();
        initCustomComponents();
        initListener();
    }

    /**
     * Configure language
     */
    private void configlanguage() {
        this.messages = ResourceBundle.getBundle(MainViewController.MESSAGE_BOUNDLE, Locale.getDefault());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblAlg = new javax.swing.JLabel();
        lblEncoding = new javax.swing.JLabel();
        lblCharset = new javax.swing.JLabel();
        btnEncode = new javax.swing.JButton();
        btnDigest = new javax.swing.JButton();
        btnCopyResult = new javax.swing.JButton();
        cmbAlg = new javax.swing.JComboBox();
        cmbEncoding = new javax.swing.JComboBox();
        cmbCharset = new javax.swing.JComboBox();
        btnFileChooser = new javax.swing.JButton();
        chkFile = new javax.swing.JCheckBox();
        lblSource = new javax.swing.JLabel();
        btnCopySource = new javax.swing.JButton();
        btnClSource = new javax.swing.JButton();
        lblResult = new javax.swing.JLabel();
        btnClResult = new javax.swing.JButton();
        lblVersion = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        scrollSource = new javax.swing.JScrollPane();
        txtSource = new javax.swing.JTextArea();
        scrollTarget = new javax.swing.JScrollPane();
        txtTarget = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(800, 600));

        lblAlg.setText("Algorithm");

        lblEncoding.setText("Encoding");

        lblCharset.setText("Charset");

        btnEncode.setText("Enc");
        btnEncode.setToolTipText("Encode");

        btnDigest.setText("Hash");
        btnDigest.setToolTipText("Hash");

        btnCopyResult.setText("Copy");
        btnCopyResult.setToolTipText("Copy result");

        cmbAlg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAlg.setToolTipText("Hash algorithm");

        cmbEncoding.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEncoding.setToolTipText("Encoding");

        cmbCharset.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCharset.setToolTipText("Charset");

        btnFileChooser.setText("Select ...");
        btnFileChooser.setToolTipText("Select a file");

        chkFile.setText("File");
        chkFile.setToolTipText("Select a file");

        lblSource.setText("Source:");

        btnCopySource.setText("Copy");
        btnCopySource.setToolTipText("Copy source");

        btnClSource.setText("Clear");
        btnClSource.setToolTipText("Clear source");

        lblResult.setText("Result:");

        btnClResult.setText("Clear");
        btnClResult.setToolTipText("Clear result");

        lblVersion.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblAlg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbAlg, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblEncoding, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbEncoding, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCharset, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbCharset, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDigest, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCopyResult, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClResult, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(chkFile)
                        .addGap(18, 18, 18)
                        .addComponent(btnFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCopySource, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClSource, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblResult)
                            .addComponent(lblSource))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkFile)
                    .addComponent(btnFileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAlg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbAlg, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEncoding)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbEncoding, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCharset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbCharset, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDigest, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEncode, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSource)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCopySource, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClSource, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClResult, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCopyResult, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(lblVersion)
                .addContainerGap())
        );

        jSplitPane1.setDividerLocation(280);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        txtSource.setColumns(20);
        txtSource.setRows(5);
        scrollSource.setViewportView(txtSource);

        jSplitPane1.setTopComponent(scrollSource);

        txtTarget.setColumns(20);
        txtTarget.setRows(5);
        scrollTarget.setViewportView(txtTarget);

        jSplitPane1.setRightComponent(scrollTarget);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Load image icons.
     */
    private void loadImages() {
        this.IMAGE_HASHTAG = Toolkit.getDefaultToolkit().createImage(
                this.getClass().getResource("/com/github/apercova/jchecksumui/ui/icons/hashtag.png"));
        this.IMAGE_ENCODE = Toolkit.getDefaultToolkit().createImage(
                this.getClass().getResource("/com/github/apercova/jchecksumui/ui/icons/encode.png"));
        this.IMAGE_DOCUMENT = Toolkit.getDefaultToolkit().createImage(
                this.getClass().getResource("/com/github/apercova/jchecksumui/ui/icons/document.png"));
        this.IMAGE_COPY = Toolkit.getDefaultToolkit().createImage(
                this.getClass().getResource("/com/github/apercova/jchecksumui/ui/icons/copy.png"));
        this.IMAGE_ERASER = Toolkit.getDefaultToolkit().createImage(
                this.getClass().getResource("/com/github/apercova/jchecksumui/ui/icons/eraser.png"));
    }

    /**
     * Init customo components.
     */
    private void initCustomComponents() {
        this.setTitle(this.messages.getString("app.title"));
        this.setIconImage(this.IMAGE_HASHTAG);

        this.fcSource = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        this.chkFile.setActionCommand(MainViewController.CMD_FILEC_CK);
        this.chkFile.setToolTipText(this.messages.getString("chk.file.tooltip"));

        this.lblAlg.setText(this.messages.getString("cmb.alg.label"));
        this.cmbAlg.setToolTipText(this.messages.getString("cmb.alg.tooltip"));
        this.lblCharset.setText(this.messages.getString("cmb.charset.label"));
        this.cmbCharset.setToolTipText(this.messages.getString("cmb.charset.tooltip"));
        this.lblEncoding.setText(this.messages.getString("cmb.encoding.label"));
        this.cmbEncoding.setToolTipText(this.messages.getString("cmb.encoding.tooltip"));

        this.btnFileChooser.setActionCommand(MainViewController.CMD_FILEC);
        this.btnFileChooser.setEnabled(false);
        this.btnFileChooser.setIcon(new ImageIcon(this.IMAGE_DOCUMENT.getScaledInstance(24, 24, Image.SCALE_AREA_AVERAGING)));
        this.btnFileChooser.setText(this.messages.getString("btn.file.text"));
        this.btnFileChooser.setToolTipText(this.messages.getString("btn.file.tooltip"));

        this.btnDigest.setActionCommand(MainViewController.CMD_DIGEST);
        this.btnDigest.setIcon(new ImageIcon(this.IMAGE_HASHTAG.getScaledInstance(24, 24, Image.SCALE_AREA_AVERAGING)));
        this.btnDigest.setText(this.messages.getString("btn.digest.text"));
        this.btnDigest.setToolTipText(this.messages.getString("btn.digest.tooltip"));

        this.btnEncode.setActionCommand(MainViewController.CMD_ENCODE);
        this.btnEncode.setIcon(new ImageIcon(this.IMAGE_ENCODE.getScaledInstance(24, 24, Image.SCALE_AREA_AVERAGING)));
        this.btnEncode.setText(this.messages.getString("btn.encode.text"));
        this.btnEncode.setToolTipText(this.messages.getString("btn.encode.tooltip"));

        this.btnCopySource.setActionCommand(MainViewController.CMD_COPY_SOURCE);
        this.btnCopySource.setIcon(new ImageIcon(this.IMAGE_COPY.getScaledInstance(24, 24, Image.SCALE_AREA_AVERAGING)));
        this.btnCopySource.setText(this.messages.getString("btn.copy.source.text"));
        this.btnCopySource.setToolTipText(this.messages.getString("btn.copy.source.tooltip"));

        this.btnCopyResult.setActionCommand(MainViewController.CMD_COPY_RESULT);
        this.btnCopyResult.setIcon(new ImageIcon(this.IMAGE_COPY.getScaledInstance(24, 24, Image.SCALE_AREA_AVERAGING)));
        this.btnCopyResult.setText(this.messages.getString("btn.copy.result.text"));
        this.btnCopyResult.setToolTipText(this.messages.getString("btn.copy.result.tooltip"));

        this.btnClSource.setActionCommand(MainViewController.CMD_CLEAR_SOURCE);
        this.btnClSource.setIcon(new ImageIcon(this.IMAGE_ERASER.getScaledInstance(24, 24, Image.SCALE_AREA_AVERAGING)));
        this.btnClSource.setText(this.messages.getString("btn.clear.source.text"));
        this.btnClSource.setToolTipText(this.messages.getString("btn.clear.source.tooltip"));

        this.btnClResult.setActionCommand(MainViewController.CMD_CLEAR_RESULT);
        this.btnClResult.setIcon(new ImageIcon(this.IMAGE_ERASER.getScaledInstance(24, 24, Image.SCALE_AREA_AVERAGING)));
        this.btnClResult.setText(this.messages.getString("btn.clear.result.text"));
        this.btnClResult.setToolTipText(this.messages.getString("btn.clear.result.tooltip"));
        
        this.lblSource.setText(this.messages.getString("label.source.label"));
        this.lblResult.setText(this.messages.getString("label.result.label"));
        
        this.lblVersion.setText(String.format("Version %s | by %s", VERSION, AUTHOR));
        this.lblVersion.setToolTipText(String.format("Version %s | by %s", VERSION, AUTHOR));
    }

    /**
     * Init listeners.
     */
    private void initListener() {
        this.controller = new MainViewController(this);
        this.chkFile.addActionListener(this.controller);
        this.btnFileChooser.addActionListener(this.controller);
        this.btnDigest.addActionListener(this.controller);
        this.btnEncode.addActionListener(this.controller);
        this.btnCopySource.addActionListener(this.controller);
        this.btnCopyResult.addActionListener(this.controller);
        this.btnClSource.addActionListener(this.controller);
        this.btnClResult.addActionListener(this.controller);
    }

    public ResourceBundle getMessages() {
        return messages;
    }

    public void setMessages(ResourceBundle messages) {
        this.messages = messages;
    }

    public JTextArea getTxtSource() {
        return txtSource;
    }

    public JTextArea getTxtTarget() {
        return txtTarget;
    }

    public JLabel getLblAlg() {
        return lblAlg;
    }

    public JLabel getLblCharset() {
        return lblCharset;
    }

    public JLabel getLblEncoding() {
        return lblEncoding;
    }

    public JLabel getLblSource() {
        return lblSource;
    }

    public JLabel getLblResult() {
        return lblResult;
    }

    public JComboBox getCmbAlg() {
        return cmbAlg;
    }

    public JComboBox getCmbCharset() {
        return cmbCharset;
    }

    public JComboBox getCmbEncoding() {
        return cmbEncoding;
    }

    public JCheckBox getChkFile() {
        return chkFile;
    }

    public JButton getBtnFileChooser() {
        return btnFileChooser;
    }

    public JButton getBtnEncode() {
        return btnEncode;
    }

    public JButton getBtnDigest() {
        return btnDigest;
    }

    public JFileChooser getFcSource() {
        return fcSource;
    }

    public JButton getBtnCopySource() {
        return btnCopySource;
    }

    public JButton getBtnClSource() {
        return btnClSource;
    }

    public JButton getBtnCopyResult() {
        return btnCopyResult;
    }

    public JButton getBtnClResult() {
        return btnClResult;
    }

    public JLabel getLblVersion() {
        return lblVersion;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClResult;
    private javax.swing.JButton btnClSource;
    private javax.swing.JButton btnCopyResult;
    private javax.swing.JButton btnCopySource;
    private javax.swing.JButton btnDigest;
    private javax.swing.JButton btnEncode;
    private javax.swing.JButton btnFileChooser;
    private javax.swing.JCheckBox chkFile;
    private javax.swing.JComboBox cmbAlg;
    private javax.swing.JComboBox cmbCharset;
    private javax.swing.JComboBox cmbEncoding;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblAlg;
    private javax.swing.JLabel lblCharset;
    private javax.swing.JLabel lblEncoding;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblSource;
    private javax.swing.JLabel lblVersion;
    private javax.swing.JScrollPane scrollSource;
    private javax.swing.JScrollPane scrollTarget;
    private javax.swing.JTextArea txtSource;
    private javax.swing.JTextArea txtTarget;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JFileChooser fcSource;
}
